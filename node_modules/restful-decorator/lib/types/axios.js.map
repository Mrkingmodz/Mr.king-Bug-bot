{"version":3,"file":"axios.js","sourceRoot":"","sources":["axios.ts"],"names":[],"mappings":";;;;AAAA,+DAA2B;AAC3B,2DAAkc;AAOzb,4FAPA,0BAAW,OAOA;AAA6B,iGAPA,+BAAgB,OAOA;AAAwR,iGAPA,+BAAgB,OAOA;AAAE,4FAPA,0BAAW,OAOA;AALzW,QAAA,KAAK,GAAG,IAAA,0BAAW,EAAC,eAAM,CAAC,CAAC,KAAK,CAAC;AAC/C,kBAAe,aAAK,CAAC;AAErB,wEAAwC","sourcesContent":["import _axios from 'axios';\nimport { extendAxios, IAxiosCacheAdapterOptions, mixinCacheConfig, IBluebird, AxiosError, AxiosInstance, AxiosRequestConfig, AxiosResponse, IAxiosAdapterWarpper, IAxiosDefaultsHeaders, IAxiosResponseClientRequest, IAxiosRetryConfig, IBluebirdAxiosResponse, IHttpheaders, IHttpheadersValues, IUnpackAxiosResponse, IUnpackedPromiseLikeReturnType, setupCacheConfig, wrapAdapter, AxiosAdapter, AxiosPromise, AxiosStatic } from '@bluelovers/axios-extend';\n\nexport const axios = extendAxios(_axios).axios;\nexport default axios;\n\nexport * from '@bluelovers/axios-extend'\n\nexport { extendAxios, IAxiosCacheAdapterOptions, mixinCacheConfig, IBluebird, AxiosError, AxiosInstance, AxiosRequestConfig, AxiosResponse, IAxiosAdapterWarpper, IAxiosDefaultsHeaders, IAxiosResponseClientRequest, IAxiosRetryConfig, IBluebirdAxiosResponse, IHttpheaders, IHttpheadersValues, IUnpackAxiosResponse, IUnpackedPromiseLikeReturnType, setupCacheConfig, wrapAdapter, AxiosAdapter, AxiosPromise, AxiosStatic };\n"]}