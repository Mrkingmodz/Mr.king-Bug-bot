{"version":3,"file":"headers.js","sourceRoot":"","sources":["headers.ts"],"names":[],"mappings":";;;;AAGA,wCAAqD;AACrD,uEAAkC;AAKlC,IAAkB,qBAKjB;AALD,WAAkB,qBAAqB;IAEtC,0CAAiB,CAAA;IACjB,wCAAe,CAAA;IACf,wCAAe,CAAA;AAChB,CAAC,EALiB,qBAAqB,GAArB,6BAAqB,KAArB,6BAAqB,QAKtC;AAED,SAAgB,OAAO,CAAC,KAAmB;IAE1C,OAAO,UAAU,MAAW,EAAE,YAA2B;QAExD,MAAM,MAAM,GAAG,IAAA,gBAAS,EAAC,MAAM,EAAE,YAAY,CAAC,CAAC;QAE/C,IAAI,CAAC,IAAI,YAAY,IAAI,IAAI,EAC7B;YACC,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,IAAI,EAAE,CAAC;YACtC,MAAM,CAAC,OAAO,CAAC,MAAM,GAAG,IAAA,eAAK,EAAC,MAAM,CAAC,OAAO,CAAC,MAAM,IAAI,EAAE,EAAE,KAAK,CAAC,CAAC;SAClE;aAED;YACC,MAAM,CAAC,OAAO,GAAG,IAAA,eAAK,EAAC,MAAM,CAAC,OAAO,IAAI,EAAE,EAAE,KAAK,CAAC,CAAC;SACpD;QAED,IAAA,gBAAS,EAAC,MAAM,EAAE,MAAM,EAAE,YAAY,CAAC,CAAC;IACzC,CAAC,CAAC;AACH,CAAC;AAlBD,0BAkBC;AAED,SAAgB,aAAa,CAAC,KAAa,EAAE,IAAqC;IAEjF,OAAO,OAAO,CAAC;QACd,aAAa,EAAE,uBAAuB,CAAC,KAAK,EAAE,IAAI,CAAC;KACnD,CAAC,CAAC;AACJ,CAAC;AALD,sCAKC;AAED,SAAgB,uBAAuB,CAAC,KAAa,EAAE,IAAqC;IAE3F,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,EAAE,EAC/B;QACC,KAAK,GAAG,IAAI,GAAG,GAAG,GAAG,KAAK,CAAC;KAC3B;SACI,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,EAC7B;QACC,KAAK,GAAG,sBAA8B,GAAG,GAAG,KAAK,CAAC;KAClD;IAED,OAAO,KAAK,CAAC;AACd,CAAC;AAZD,0DAYC","sourcesContent":["import { AxiosRequestConfig, AxiosResponse, AxiosTransformer } from 'axios';\nimport RequestConfig from './config';\nimport { IHttpheaders, IAxiosResponseClientRequest } from '../types/axios';\nimport { getConfig, setConfig } from './config/util';\nimport merge from '../util/merge';\nimport { IPropertyKey } from 'reflect-metadata-util';\nimport LazyURLSearchParams from 'http-form-urlencoded';\nimport { TransformRequest } from './config/index';\n\nexport const enum EnumAuthorizationType\n{\n\tBearer = 'Bearer',\n\tToken = 'token',\n\tBasic = 'Basic',\n}\n\nexport function Headers(value: IHttpheaders)\n{\n\treturn function (target: any, propertyName?: IPropertyKey)\n\t{\n\t\tconst config = getConfig(target, propertyName);\n\n\t\tif (0 && propertyName == null)\n\t\t{\n\t\t\tconfig.headers = config.headers || {};\n\t\t\tconfig.headers.common = merge(config.headers.common || {}, value);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tconfig.headers = merge(config.headers || {}, value);\n\t\t}\n\n\t\tsetConfig(config, target, propertyName);\n\t};\n}\n\nexport function Authorization(value: string, type?: string | EnumAuthorizationType)\n{\n\treturn Headers({\n\t\tAuthorization: _makeAuthorizationValue(value, type)\n\t});\n}\n\nexport function _makeAuthorizationValue(value: string, type?: string | EnumAuthorizationType)\n{\n\tif (type != null && type !== '')\n\t{\n\t\tvalue = type + ' ' + value;\n\t}\n\telse if (!value.includes(' '))\n\t{\n\t\tvalue = EnumAuthorizationType.Basic + ' ' + value;\n\t}\n\n\treturn value;\n}\n"]}