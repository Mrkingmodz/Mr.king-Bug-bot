{"version":3,"file":"util.js","sourceRoot":"","sources":["util.ts"],"names":[],"mappings":";AAAA;;GAEG;;;AAEH,4BAA0B;AAC1B,iEAA8G;AAEjG,QAAA,SAAS,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC;AAE1C,SAAgB,SAAS,CAAsB,MAAW,EAAE,YAA2B;IAEtF,OAAO,IAAA,yCAAiB,EAAC,iBAAS,EAAE,MAAM,EAAE,YAAY,CAAC,IAAI,EAAO,CAAC;AACtE,CAAC;AAHD,8BAGC;AAED,SAAgB,SAAS,CAAgB,KAAQ,EAAE,MAAW,EAAE,YAA2B;IAE1F,OAAO,IAAA,yCAAiB,EAAC,iBAAS,EAAE,KAAK,EAAE,MAAM,EAAE,YAAY,CAAC,CAAC;AAClE,CAAC;AAHD,8BAGC;AAED,SAAgB,SAAS,CAAC,MAAW,EAAE,YAA2B;IAEjE,OAAO,IAAA,yCAAiB,EAAC,iBAAS,EAAE,MAAM,EAAE,YAAY,CAAC,CAAC;AAC3D,CAAC;AAHD,8BAGC","sourcesContent":["/**\n * Created by user on 2019/6/8.\n */\n\nimport 'reflect-metadata';\nimport { getMemberMetadata, hasMemberMetadata, IPropertyKey, setMemberMetadata } from 'reflect-metadata-util';\n\nexport const SymConfig = Symbol(`config`);\n\nexport function getConfig<T extends any = any>(target: any, propertyName?: IPropertyKey): T\n{\n\treturn getMemberMetadata(SymConfig, target, propertyName) || {} as T;\n}\n\nexport function setConfig<T extends any>(value: T, target: any, propertyName?: IPropertyKey)\n{\n\treturn setMemberMetadata(SymConfig, value, target, propertyName);\n}\n\nexport function hasConfig(target: any, propertyName?: IPropertyKey)\n{\n\treturn hasMemberMetadata(SymConfig, target, propertyName);\n}\n"]}