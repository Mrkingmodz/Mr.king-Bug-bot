{"version":3,"file":"catch.js","sourceRoot":"","sources":["catch.ts"],"names":[],"mappings":";;;AAAA;;GAEG;AACH,qDAAiE;AAEjE,iEAA4G;AAG/F,QAAA,aAAa,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC;AAElD,SAAgB,UAAU,CAA8D,OAAqC;IAE5H,OAAO,UAAU,MAAM,EAAE,WAAW;QAEnC,IAAA,sCAAyB,EAAC,YAAY,EAAE,MAAM,EAAE,WAAW,CAAC,CAAA;QAE5D,IAAA,yCAAiB,EAAC,qBAAa,EAAE,OAAO,EAAE,MAAM,EAAE,WAAW,CAAC,CAAA;IAC/D,CAAC,CAAA;AACF,CAAC;AARD,gCAQC;AAED,SAAgB,aAAa,CAAqB,MAAW,EAAE,WAAyB;IAEvF,OAAO,IAAA,uCAAe,EAAC,qBAAa,EAAE,MAAM,EAAE,WAAW,CAAC,CAAA;AAC3D,CAAC;AAHD,sCAGC;AAED,kBAAe,UAAU,CAAA","sourcesContent":["/**\n * Created by user on 2019/6/11.\n */\nimport { checkMemberDecoratorsOnly } from '../helper/decorators';\nimport { ITSPickExtra, ITSRequireAtLeastOne, ITSResolvable } from 'ts-type';\nimport { IPropertyKey, setMemberMetadata, getMemberMetadata, getMetadataLazy } from 'reflect-metadata-util';\nimport { AxiosError } from 'axios';\n\nexport const SymCatchError = Symbol('CatchError');\n\nexport function CatchError<E extends Error | AxiosError<unknown> = AxiosError<unknown>>(fnCatch: (e: E) => ITSResolvable<any>): MethodDecorator\n{\n\treturn function (target, propertyKey)\n\t{\n\t\tcheckMemberDecoratorsOnly(`CatchError`, target, propertyKey)\n\n\t\tsetMemberMetadata(SymCatchError, fnCatch, target, propertyKey)\n\t}\n}\n\nexport function getCatchError<E extends Error, R>(target: any, propertyKey: IPropertyKey): (e: E) => ITSResolvable<R>\n{\n\treturn getMetadataLazy(SymCatchError, target, propertyKey)\n}\n\nexport default CatchError\n"]}