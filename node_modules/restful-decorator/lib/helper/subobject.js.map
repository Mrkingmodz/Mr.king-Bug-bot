{"version":3,"file":"subobject.js","sourceRoot":"","sources":["subobject.ts"],"names":[],"mappings":";AAAA;;GAEG;;;AAQH,SAAgB,SAAS,CAAiB,IAAO,EAAE,MAAkB;IAEpE,MAAM,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;IAEtC,OAAO,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE;QAC7B,GAAG,IAAI;QACP,OAAO,EAAE,MAAM;KACf,CAAC,CAAC;AACJ,CAAC;AARD,8BAQC;AAED,kBAAe,SAAS,CAAC","sourcesContent":["/**\n * Created by user on 2019/6/7.\n */\n\nimport { ITSOverwrite } from 'ts-type';\n\nexport type IMethod<T = {}, P = {}> = {\n\t$parent?: IMethod<P>,\n} & ITSOverwrite<Omit<P, '$parent'>, Omit<T, '$parent'>>;\n\nexport function subobject<T = {}, P = {}>(attr: T, parent: IMethod<P>): IMethod<T, P>\n{\n\tconst current = Object.create(parent);\n\n\treturn Object.assign(current, {\n\t\t...attr,\n\t\t$parent: parent\n\t});\n}\n\nexport default subobject;\n"]}