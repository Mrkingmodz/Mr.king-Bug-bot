{"version":3,"file":"index.js","sourceRoot":"","sources":["index.ts"],"names":[],"mappings":";AAAA;;GAEG;;;AAEH;;;GAGG;AACH,SAAgB,eAAe,CAAC,GAAW;IAE1C,OAAO,GAAG,CAAC,OAAO,CAAC,cAAc,EAAE,OAAO,CAAC,CAAC;AAC7C,CAAC;AAHD,0CAGC;AAED,SAAgB,eAAe,CAAC,GAAW;IAE1C,OAAO,GAAG;SACR,OAAO,CAAC,kBAAkB,EAAE,CAAC,CAAC,EAAE,CAAS,EAAE,EAAE;QAE7C,WAAW,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;QAErB,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;QAEjC,OAAO,IAAI,CAAC,EAAE,CAAC;IAChB,CAAC,CAAC,CACD;AACH,CAAC;AAZD,0CAYC;AAED,SAAgB,WAAW,CAAC,CAAS,EAAE,UAAoB;IAE1D,IAAI,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,EACzB;QACC,IAAI,UAAU,EACd;YACC,MAAM,IAAI,SAAS,CAAC,wCAAwC,CAAC,GAAG,CAAC,CAAC;SAClE;QAED,OAAO,IAAI,CAAC;KACZ;AACF,CAAC;AAXD,kCAWC;AAED,kBAAe,eAAe,CAAA","sourcesContent":["/**\n * Created by user on 2019/6/9.\n */\n\n/**\n * replace :varname with {varname} to make it RFC 6570 compatible\n * https://github.com/octokit/endpoint.js/blob/master/src/parse.ts\n */\nexport function routerToRfc6570(url: string)\n{\n\treturn url.replace(/:([a-z]\\w*)/g, \"{+$1}\");\n}\n\nexport function rfc6570ToRouter(url: string)\n{\n\treturn url\n\t\t.replace(/\\{([^{}:\"']+)\\}/g, (s, w: string) =>\n\t\t{\n\t\t\t_notSupport(w, true);\n\n\t\t\tw = w.replace(/^\\+(\\w+)$/, '$1');\n\n\t\t\treturn `:${w}`;\n\t\t})\n\t\t;\n}\n\nexport function _notSupport(w: string, throwError?: boolean)\n{\n\tif (/^\\+?[^\\w]+$/.test(w))\n\t{\n\t\tif (throwError)\n\t\t{\n\t\t\tthrow new TypeError(`only can convert base rule, but got {${w}}`);\n\t\t}\n\n\t\treturn true;\n\t}\n}\n\nexport default routerToRfc6570\n"]}