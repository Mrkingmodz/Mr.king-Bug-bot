{"version":3,"file":"index.js","sourceRoot":"","sources":["index.ts"],"names":[],"mappings":";;;;AAAA,+CAA2D;AAE3D,iEAc0C;AAE1C,qEAAgC;AAMhC,MAAM,aAAa,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC;AA8CxC,IAAa,KAAK,GAAlB,MAAa,KAAM,SAAQ,wBAAkB;IAK5C,YAAY,OAA4B;QAEvC,KAAK,CAAC,OAAO,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAA;IACjC,CAAC;IAES,KAAK,CAAC,QAA6B,EAAE,OAA6B,EAAE,GAAG,IAAS;QAEzF,QAAQ,GAAG,KAAK,CAAC,KAAK,CAAC,QAAQ,EAAE,GAAG,IAAI,CAAC,CAAC;QAE1C,IAAI,CAAC,aAAa,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,EAAS,EAAE,OAAO,CAAC,CAAC;QAE/E,OAAO,QAAQ,CAAA;IAChB,CAAC;IAED,cAAc,CAAC,WAAmB;QAEjC,IAAI,CAAC,aAAa,CAAC,CAAC,KAAK,GAAG,WAAW,CAAC;QAExC,OAAO,IAAI,CAAC;IACb,CAAC;IAwCD,AAHA;;OAEG;IACH,MAAM,CAAiB,QAUtB;QAEA,MAAM,YAAY,GAAG,IAAI,CAAC,YAAmC,CAAC;QAE9D,IAAI,YAAY,IAAI,YAAY,CAAC,IAAI,EACrC;YACC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,CAAC,CAAC;YAChE,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,CAAC,CAAC;SAChE;QAED,OAAO,kBAAQ,CAAC,OAAO,CAAC,YAAY,CAAC,CAAA;IACtC,CAAC;CAED,CAAA;AAvBA;IAtCC,IAAA,iBAAI,EAAC,UAAU,CAAC;IAChB,2BAAc;IACd,IAAA,gCAAmB,EAAC,CAAC,IAAI,EAAE,EAAE;QAE7B,MAAM,CAAE,IAAI,CAAE,GAAG,IAAI,CAAC,IAAI,CAAC;QAE3B,IAAI,IAAI,EACR;YACC,IAAI,OAAO,IAAI,CAAC,KAAK,KAAK,QAAQ,EAClC;gBACC,IAAI,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,EAC/B;oBACC,IAAI,CAAC,KAAK,GAAI,IAAI,CAAC,KAAgB,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;iBACvD;aACD;YAED,IAAI,IAAI,CAAC,GAAG,IAAI,IAAI,EACpB;gBACC,aAAa;gBACb,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC;aAC9C;SACD;QAED,OAAO,IAAI,CAAA;IACZ,CAAC,CAAC;IACD,IAAA,0BAAa,GAAE;IACf,IAAA,uBAAU,EAAC,UAAU,CAAa;QAElC,IAAI,CAAC,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,EAC9C;YACC,OAAO,kBAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAA;SACvC;QAED,OAAO,kBAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAA;IAC1B,CAAC,CAAC;IAIM,wBAAA,IAAA,yBAAY,GAAE,CAAA;;;;mCAqBrB;AArFW,KAAK;IAPjB,IAAA,oBAAO,EAAC,wBAAwB,CAAC;IACjC,IAAA,oBAAO,EAAC;QACR,QAAQ,EAAE,kBAAkB;KAC5B,CAAC;IACD,IAAA,2BAAc,EAAC;QACf,YAAY,EAAE,MAAM;KACpB,CAAC;;GACW,KAAK,CAuFjB;AAvFY,sBAAK;AAyFlB,kBAAe,KAAK,CAAA","sourcesContent":["import { AbstractHttpClient } from 'restful-decorator/lib';\nimport { AxiosRequestConfig, IBluebirdAxiosResponse } from 'restful-decorator/lib/types/axios';\nimport {\n\tCatchError,\n\tFormUrlencoded,\n\tBaseUrl, BodyParams,\n\tCacheRequest,\n\tGET,\n\tHeaders,\n\tmethodBuilder, ParamData,\n\tParamMapAuto, ParamMapData,\n\tParamPath,\n\tParamQuery,\n\tPOST,\n\tHandleParamMetadata,\n\tRequestConfigs, TransformRequest, PUT, BodyData,\n} from 'restful-decorator/lib/decorators';\nimport { _makeAuthorizationValue } from 'restful-decorator/lib/decorators/headers';\nimport Bluebird from 'bluebird';\nimport { AxiosError } from 'axios';\n\nimport { ITSResolvable } from 'ts-type';\nimport { IBluebird } from 'restful-decorator/lib/index';\n\nconst SymApiOptions = Symbol('options');\n\nexport interface ICaiyunFanyiOptions\n{\n\ttoken: string,\n\tdefaults?: AxiosRequestConfig,\n}\n\ninterface IImgBBUpload\n{\n\tdata: {\n\t\tid: string;\n\t\turl_viewer: string;\n\t\turl: string;\n\t\tdisplay_url: string;\n\t\ttitle: string;\n\t\ttime: string;\n\t\timage: {\n\t\t\tfilename: string;\n\t\t\tname: string;\n\t\t\tmime: string;\n\t\t\textension: string;\n\t\t\turl: string;\n\t\t\tsize: number;\n\t\t};\n\t\tthumb: {\n\t\t\tfilename: string;\n\t\t\tname: string;\n\t\t\tmime: string;\n\t\t\textension: string;\n\t\t\turl: string;\n\t\t\tsize: number;\n\t\t};\n\t\tdelete_url: string;\n\t};\n\tsuccess: boolean;\n\tstatus: number | 200;\n}\n\n@BaseUrl('https://api.imgbb.com/')\n@Headers({\n\t'Accept': 'application/json',\n})\n@RequestConfigs({\n\tresponseType: 'json',\n})\nexport class ImgBB extends AbstractHttpClient\n{\n\n\t[SymApiOptions]: ICaiyunFanyiOptions;\n\n\tconstructor(options: ICaiyunFanyiOptions)\n\t{\n\t\tsuper(options.defaults, options)\n\t}\n\n\tprotected _init(defaults?: AxiosRequestConfig, options?: ICaiyunFanyiOptions, ...argv: any): any\n\t{\n\t\tdefaults = super._init(defaults, ...argv);\n\n\t\tthis[SymApiOptions] = Object.assign(this[SymApiOptions] || {} as any, options);\n\n\t\treturn defaults\n\t}\n\n\tsetAccessToken(accessToken: string)\n\t{\n\t\tthis[SymApiOptions].token = accessToken;\n\n\t\treturn this;\n\t}\n\n\t@POST('1/upload')\n\t@FormUrlencoded\n\t@HandleParamMetadata((data) => {\n\n\t\tconst [ argv ] = data.argv;\n\n\t\tif (argv)\n\t\t{\n\t\t\tif (typeof argv.image !== 'string')\n\t\t\t{\n\t\t\t\tif (Buffer.isBuffer(argv.image))\n\t\t\t\t{\n\t\t\t\t\targv.image = (argv.image as Buffer).toString('base64');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (argv.key == null)\n\t\t\t{\n\t\t\t\t// @ts-ignore\n\t\t\t\targv.key = data.thisArgv[SymApiOptions].token;\n\t\t\t}\n\t\t}\n\n\t\treturn data\n\t})\n\t@methodBuilder()\n\t@CatchError(function (e: AxiosError)\n\t{\n\t\tif (e.response.data && e.response.data.message)\n\t\t{\n\t\t\treturn Bluebird.reject(e.response.data)\n\t\t}\n\n\t\treturn Bluebird.reject(e)\n\t})\n\t/**\n\t * API v1 calls can be done using the POST or GET request methods but since GET request are limited by the maximum allowed length of an URL you should prefer the POST request method.\n\t */\n\tupload(@ParamMapAuto() jsonData: {\n\t\tkey?: string,\n\t\t/**\n\t\t * The name of the file, this is automatically detected if uploading a file with a POST and multipart / form-data\n\t\t */\n\t\tname?: string,\n\t\t/**\n\t\t * A binary file, base64 data, or a URL for an image. (up to 16MB)\n\t\t */\n\t\timage: string | Buffer,\n\t}): IBluebird<IImgBBUpload>\n\t{\n\t\tconst $returnValue = this.$returnValue as any as IImgBBUpload;\n\n\t\tif ($returnValue && $returnValue.data)\n\t\t{\n\t\t\t$returnValue.data.image.size = $returnValue.data.image.size | 0;\n\t\t\t$returnValue.data.thumb.size = $returnValue.data.thumb.size | 0;\n\t\t}\n\n\t\treturn Bluebird.resolve($returnValue)\n\t}\n\n}\n\nexport default ImgBB"]}