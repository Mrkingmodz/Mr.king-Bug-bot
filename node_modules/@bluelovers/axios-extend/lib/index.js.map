{"version":3,"file":"index.js","sourceRoot":"","sources":["index.ts"],"names":[],"mappings":";;;;AASA,mCAAwD;AACxD,qEAAgC;AAChC,6CAAoF;AACpF,mGAA4D;AAE5D,8DAA6D;AA2DpD,2BA3DF,eAAgB,CA2DE;AAAsB,iGA3DpB,wBAAgB,OA2DoB;AAzD/D,qCAA8C;AAyDnB,mGAzDlB,2BAAkB,OAyDkB;AAxD7C,uDAAuD;AACvD,uDAAwB;AACxB,aAAa;AACb,2EAAqC;AAKrC,SAAgB,WAAW,CAAyC,KAAS,EAAE,cAAmC;IAEjH,KAAK,GAAG,IAAA,iCAAqB,EAAC,KAAK,CAAO,CAAC;IAE3C,IAAA,oBAAS,EAAC,KAAK,CAAC,CAAC;IAEjB,IAAI,IAAA,0BAAa,EAAC,KAAK,CAAC,EACxB;QACC,IAAI,GAAG,GAAG,KAAK,CAAC,MAAM,CAAC;QAEvB,KAAK,CAAC,MAAM,GAAG,UAAU,MAAM,EAAE,GAAG,IAAI;YAEvC,IAAI,MAAM,IAAI,IAAI,EAClB;gBACC,MAAM,GAAG,IAAA,kBAAS,EAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aAClC;YAED,IAAA,qBAAU,EAAC,MAAM,EAAE,+BAA+B,CAAC,CAAC;YAEpD,IAAI,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC,CAAC;YAExC,IAAA,cAAK,EAAC,CAAC,CAAC,QAAQ,EAAsB;gBACpC,SAAS,EAAE;oBACV,QAAQ,EAAE,CAAC;iBACX;aACD,CAAC,CACF;YAED,IAAA,oBAAS,EAAC,CAAC,CAAC,CAAC;YAEb,OAAO,CAAC,CAAC;QACV,CAAC,CAAA;KACD;IAED,OAAO;QACN,KAAK;QACL;;WAEG;QACH,gBAAgB,EAAhB,eAAgB;QAChB,gBAAgB,EAAhB,wBAAgB;QAChB,kBAAkB,CAA+B,MAAS,EAAE,SAAwB,KAAK,EAAE,GAAG,IAA0B;YAEvH,OAAO,IAAA,2BAAkB,EAAC,MAAM,EAAE,MAAM,EAAE,cAAc,EAAE,GAAG,IAAI,CAAC,CAAA;QACnE,CAAC;KACD,CAAA;AACF,CAAC;AA9CD,kCA8CC;AAID,SAAgB,WAAW,CAAC,EAAwB,EAAE,MAA0B;IAE/E,MAAM,GAAG,GAAG,MAAM,CAAC,OAAO,CAAC;IAE3B,IAAI,GAAG,EACP;QACC,OAAO,UAAyC,MAA0B;YAEzE,OAAO,kBAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;iBAC7C,IAAI,CAAC,IAAI,CAAC;iBACV,IAAI,CAAC,CAAC,WAAW,EAAE,EAAE;gBACrB,OAAO,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,EAAE,WAAW,CAAC,CAAA;YAC1C,CAAC,CAAC,CACD;QACH,CAAC,CAAA;KACD;IAED,OAAO,kBAAQ,CAAC,MAAM,CAAC,EAAE,CAAC,CAAA;AAC3B,CAAC;AAlBD,kCAkBC;AAED,kBAAe,WAAW,CAAA","sourcesContent":["import {\n\tAxiosAdapter,\n\tAxiosError,\n\tAxiosInstance,\n\tAxiosPromise,\n\tAxiosRequestConfig,\n\tAxiosResponse,\n\tAxiosStatic,\n} from 'axios';\nimport { merge, defaultsDeep, cloneDeep } from 'lodash';\nimport Bluebird from 'bluebird';\nimport { attach as RaxAttach, RetryConfig as IAxiosRetryConfig } from 'retry-axios';\nimport axiosCookieJarSupport from 'axios-cookiejar-support';\nimport { IAxiosCacheAdapterOptions } from 'axios-cache-adapter';\nimport setupCacheConfig, { mixinCacheConfig } from './cache';\nimport { IAxiosAdapterWarpper } from './types';\nimport { mixinDefaultConfig } from './config';\nimport { isAxiosStatic } from '@bluelovers/axios-util';\nexport * from \"./types\";\n// @ts-ignore\nimport unsetValue from 'unset-value';\n\nexport { IAxiosCacheAdapterOptions, IAxiosRetryConfig, AxiosAdapter, AxiosPromise }\nexport { AxiosRequestConfig, AxiosResponse, AxiosInstance, AxiosError, AxiosStatic }\n\nexport function extendAxios<AX extends AxiosInstance | AxiosStatic>(axios: AX, defaultOptions?: AxiosRequestConfig)\n{\n\taxios = axiosCookieJarSupport(axios) as AX;\n\n\tRaxAttach(axios);\n\n\tif (isAxiosStatic(axios))\n\t{\n\t\tlet old = axios.create;\n\n\t\taxios.create = function (config, ...argv)\n\t\t{\n\t\t\tif (config == null)\n\t\t\t{\n\t\t\t\tconfig = cloneDeep(this.defaults);\n\t\t\t}\n\n\t\t\tunsetValue(config, 'raxConfig.currentRetryAttempt');\n\n\t\t\tlet o = old.call(this, config, ...argv);\n\n\t\t\tmerge(o.defaults, <AxiosRequestConfig>{\n\t\t\t\t\traxConfig: {\n\t\t\t\t\t\tinstance: o,\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t;\n\n\t\t\tRaxAttach(o);\n\n\t\t\treturn o;\n\t\t}\n\t}\n\n\treturn {\n\t\taxios,\n\t\t/**\n\t\t * only use this method once for each axios, if not will create new cache\n\t\t */\n\t\tsetupCacheConfig,\n\t\tmixinCacheConfig,\n\t\tmixinDefaultConfig<T extends AxiosRequestConfig>(config: T, _axios: AxiosInstance = axios, ...opts: AxiosRequestConfig[]): AxiosRequestConfig\n\t\t{\n\t\t\treturn mixinDefaultConfig(config, _axios, defaultOptions, ...opts)\n\t\t},\n\t}\n}\n\nexport { setupCacheConfig, mixinDefaultConfig, mixinCacheConfig }\n\nexport function wrapAdapter(fn: IAxiosAdapterWarpper, config: AxiosRequestConfig)\n{\n\tconst old = config.adapter;\n\n\tif (old)\n\t{\n\t\treturn function (this: ThisType<AxiosInstance>, config: AxiosRequestConfig)\n\t\t{\n\t\t\treturn Bluebird.resolve(old.call(this, config))\n\t\t\t\t.bind(this)\n\t\t\t\t.then((returnValue) => {\n\t\t\t\t\treturn fn.call(this, config, returnValue)\n\t\t\t\t})\n\t\t\t\t;\n\t\t}\n\t}\n\n\treturn Bluebird.method(fn)\n}\n\nexport default extendAxios"]}