{"version":3,"file":"setup.js","sourceRoot":"","sources":["setup.ts"],"names":[],"mappings":";;;AAAA,uCAAoD;AACpD,mCAAoE;AAEpE,4DAAgE;AAEhE,qCAAiC;AAE1B,KAAK,UAAU,cAAc,CAAC,OAIpC;IAEA,MAAM,EAAE,mBAAmB,EAAE,SAAS,EAAE,KAAK,EAAE,GAAG,OAAO,IAAI,EAAE,CAAC;IAEhE,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC;IAE9B,MAAM,IAAA,mBAAQ,EAAC,SAAS,CAAC;SACvB,KAAK,CAAC,CAAC,CAAC,EAAE;QACV,OAAO,EAAE,CAAA;IACV,CAAC,CAAC;SACD,IAAI,CAAC,KAAK,EAAE,IAAI,EAAE,EAAE;QAEpB,IAAI,GAAG,GAAG,MAAO,KAAyB,CAAC,MAAM,EAAE,CAAC;QAEpD,MAAM,IAAA,mBAAW,EAAC,KAAK,EAAE,IAAI,EAAE;YAC9B,YAAY,CAAC,CAAS,EAAE,CAAC;gBAExB,OAAO,CAAC,CAAC;YACV,CAAC;SACD,CAAC,CAAC;QAEH,IAAI,IAAI,GAAG,MAAO,KAAyB,CAAC,MAAM,EAAE,CAAC;QAErD,oBAAY,CAAC,GAAG,CAAC,WAAW,GAAG,EAAE,EAAE,UAAU,IAAI,EAAE,CAAC,CAAC;IACtD,CAAC,CAAC,CACF;IAED,IAAA,gBAAM,GAAE,CAAC;IAET,SAAS,SAAS;QAEjB,OAAO,IAAA,mBAAW,EAAC,KAAK,EAAE,CAAC,IAAI,EAAE,EAAE;YAClC,IAAA,gBAAM,GAAE,CAAC;YACT,IAAA,yBAAc,EAAC,SAAS,EAAE,IAAI,EAAE;gBAC/B,MAAM,EAAE,CAAC;aACT,CAAC,CAAC;YACH,IAAA,gBAAM,GAAE,CAAC;YAET,oBAAY,CAAC,KAAK,CAAC,SAAS,EAAE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,OAAO,EAAE,SAAS,CAAC,CAAC;QAE7E,CAAC,CAAC,CAAA;IACH,CAAC;IAED,SAAS,CAAC,KAAK,GAAG,KAAK,CAAC;IAExB,IAAI,CAAC,mBAAmB,EACxB;QACC,MAAM,IAAA,uBAAe,EAAC,GAAG,EAAE;YAC1B,oBAAY,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC;YACtC,OAAO,SAAS,EAAE,CAAC;QACpB,CAAC,CAAC,CAAC;KACH;IAED,OAAO,SAAS,CAAA;AACjB,CAAC;AA1DD,wCA0DC;AAED,kBAAe,cAAc,CAAA","sourcesContent":["import { outputJSONSync, readJSON } from 'fs-extra';\nimport { exportCache, importCache, processExitHook } from './index';\nimport { IBaseCacheStore } from './index';\nimport { consoleDebug } from 'restful-decorator/lib/util/debug';\nimport { ICacheStoreJsonItem, ICacheStoreJsonRow } from './index';\nimport { freeGC } from 'free-gc';\n\nexport async function setupCacheFile(options?: {\n\tstore: IBaseCacheStore | object,\n\tsaveCacheFileBySelf?: boolean,\n\tcacheFile: string,\n})\n{\n\tconst { saveCacheFileBySelf, cacheFile, store } = options || {};\n\n\tconst now = Date.now() + 3600;\n\n\tawait readJSON(cacheFile)\n\t\t.catch(e => {\n\t\t\treturn {}\n\t\t})\n\t\t.then(async (json) => {\n\n\t\t\tlet len = await (store as IBaseCacheStore).length();\n\n\t\t\tawait importCache(store, json, {\n\t\t\t\timportFilter(k: string, v)\n\t\t\t\t{\n\t\t\t\t\treturn v;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tlet len2 = await (store as IBaseCacheStore).length();\n\n\t\t\tconsoleDebug.log(`before: ${len}`, `after: ${len2}`);\n\t\t})\n\t;\n\n\tfreeGC();\n\n\tfunction saveCache()\n\t{\n\t\treturn exportCache(store, (json) => {\n\t\t\tfreeGC();\n\t\t\toutputJSONSync(cacheFile, json, {\n\t\t\t\tspaces: 2,\n\t\t\t});\n\t\t\tfreeGC();\n\n\t\t\tconsoleDebug.debug(`[Cache]`, Object.keys(json).length, `saved`, cacheFile);\n\n\t\t})\n\t}\n\n\tsaveCache.store = store;\n\n\tif (!saveCacheFileBySelf)\n\t{\n\t\tawait processExitHook(() => {\n\t\t\tconsoleDebug.debug(`processExitHook`);\n\t\t\treturn saveCache();\n\t\t});\n\t}\n\n\treturn saveCache\n}\n\nexport default setupCacheFile\n"]}