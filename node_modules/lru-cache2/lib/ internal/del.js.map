{"version":3,"file":"del.js","sourceRoot":"","sources":["del.ts"],"names":[],"mappings":";;;AAAA,sCAA6D;AAItD,MAAM,GAAG,GAAG,CAAO,IAAoB,EAAE,IAAiB,EAAE,EAAE;IAEpE,IAAI,IAAI,EACR;QACC,MAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAA;QACtB,IAAI,IAAI,CAAC,gBAAO,CAAC,EACjB;YACC,IAAI,CAAC,gBAAO,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,KAAK,CAAC,CAAA;SACjC;QAED,IAAI,CAAC,eAAM,CAAC,IAAI,GAAG,CAAC,MAAM,CAAA;QAC1B,IAAI,CAAC,cAAK,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA;QAC3B,IAAI,CAAC,iBAAQ,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,CAAA;KAC/B;AACF,CAAC,CAAA;AAdY,QAAA,GAAG,OAcf","sourcesContent":["import { DISPOSE, LENGTH, CACHE, LRU_LIST } from '../symbol';\nimport { LRUCache } from '../LRUCache';\nimport { INode } from '../types';\n\nexport const del = <K, V>(self: LRUCache<K, V>, node: INode<K, V>) =>\n{\n\tif (node)\n\t{\n\t\tconst hit = node.value\n\t\tif (self[DISPOSE])\n\t\t{\n\t\t\tself[DISPOSE](hit.key, hit.value)\n\t\t}\n\n\t\tself[LENGTH] -= hit.length\n\t\tself[CACHE].delete(hit.key)\n\t\tself[LRU_LIST].removeNode(node)\n\t}\n}\n"]}