{"version":3,"file":"index.js","sourceRoot":"","sources":["index.ts"],"names":[],"mappings":";;;;AAAA,qCAAqC;AACrC,yFAAsE;AAEtE,2DAA4B;AAE5B,uCAA6E;AAE7E,SAAgB,OAAO,CAA4B,WAAuB,EACzE,KAAa,EACb,OAA4B;IAG5B,IAAI,KAAqB,CAAC;IAC1B,OAAO,GAAG,OAAO,IAAI,EAAE,CAAC;IAExB,MAAM,EAAE,cAAc,GAAG,IAAI,EAAE,WAAW,EAAE,gBAAgB,EAAE,GAAG,OAAO,CAAC;IAEzE,MAAM,OAAO,GAAG,EAAiB,CAAC;IAElC,MAAM,EAAE,GAAM,IAAA,sBAAY,EAAI,WAAkB,EAAE,OAAO,CAAC,CAAC;IAC3D,MAAM,QAAQ,GAAG,EAAE,CAAC,MAAM,CAAC;IAE3B,IAAI,cAAc,EAClB;QACC,EAAE,CAAC,SAAS,GAAG,CAAC,CAAC;KACjB;IAED,IAAI,SAAS,GAAG,EAAE,CAAC,SAAS,CAAC;IAE7B,IAAI,EAAE,YAAY,EAAE,WAAW,EAAE,GAAG,OAAO,CAAC;IAE5C,YAAY,GAAG,CAAC,CAAC,YAAY,CAAC;IAC9B,WAAW,GAAG,CAAC,CAAC,WAAW,CAAC;IAE5B,OAAO,KAAK,GAAG,EAAE,CAAC,IAAI,CAAC,KAAK,CAAmB,EAC/C;QACC,OAAO,KAAK,CAAC,KAAK,CAAC;QAEnB,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,EAA2B;YAC1D,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC;YACf,GAAG,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;YAEnB,aAAa;YACb,WAAW,EAAE,WAAW,IAAI,MAAM,CAAC,WAAW;YAC9C,aAAa;YACb,YAAY,EAAE,YAAY,IAAI,MAAM,CAAC,YAAY;YAEjD,CAAC,cAAM,CAAC,EAAE,gBAAgB,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO;SAC3C,CAAC,CAAC,CAAC;QAEJ,SAAS,GAAG,EAAE,CAAC,SAAS,CAAC;QAEzB,IAAI,CAAC,QAAQ,EACb;YACC,MAAM;SACN;KACD;IAED,IAAI,CAAC,gBAAgB,EACrB;QACC,MAAM,CAAC,gBAAgB,CAAC,OAAO,EAAE;YAChC,EAAE,EAAE;gBACH,KAAK,EAAE,EAAE;gBACT,UAAU,EAAE,KAAK;gBACjB,YAAY,EAAE,KAAK;gBACnB,QAAQ,EAAE,KAAK;aACf;YAED,KAAK,EAAE;gBACN,KAAK,EAAE,KAAK;gBACZ,UAAU,EAAE,KAAK;gBACjB,YAAY,EAAE,KAAK;gBACnB,QAAQ,EAAE,KAAK;aACf;YAED,SAAS,EAAE;gBACV,KAAK,EAAE,SAAS;gBAChB,UAAU,EAAE,KAAK;gBACjB,YAAY,EAAE,KAAK;gBACnB,QAAQ,EAAE,KAAK;aACf;SACD,CAAC,CAAC;KACH;IAED,OAAO,OAAO,CAAC;AAChB,CAAC;AA9ED,0BA8EC;AAEmB,0BAAO;AAE3B,kBAAe,OAAO,CAAC","sourcesContent":["/// <reference lib=\"es2018.regexp\" />\nimport _cloneRegexp, { ICloneRegexp } from '@regexp-cjk/clone-regexp';\n\nexport * from './lib/types';\n\nimport { IExecAllOptions, IMatches, IMatchesRow, SYMBOL } from './lib/types';\n\nexport function execall<T extends RegExp = RegExp>(inputRegExp: T | RegExp,\n\tinput: string,\n\toptions?: IExecAllOptions<T>,\n): IMatches<T>\n{\n\tlet match: IMatchesRow<T>;\n\toptions = options || {};\n\n\tconst { resetLastIndex = true, cloneRegexp, removeHiddenData } = options;\n\n\tconst matches = [] as IMatches<T>;\n\n\tconst re: T = _cloneRegexp<T>(inputRegExp as any, options);\n\tconst isGlobal = re.global;\n\n\tif (resetLastIndex)\n\t{\n\t\tre.lastIndex = 0;\n\t}\n\n\tlet lastIndex = re.lastIndex;\n\n\tlet { rightContext, leftContext } = options;\n\n\trightContext = !!rightContext;\n\tleftContext = !!leftContext;\n\n\twhile (match = re.exec(input) as IMatchesRow<T>)\n\t{\n\t\tdelete match.input;\n\n\t\tmatches.push(Object.assign(match, <Partial<IMatchesRow<T>>>{\n\t\t\tmatch: match[0],\n\t\t\tsub: match.slice(1),\n\n\t\t\t// @ts-ignore\n\t\t\tleftContext: leftContext && RegExp.leftContext,\n\t\t\t// @ts-ignore\n\t\t\trightContext: rightContext && RegExp.rightContext,\n\n\t\t\t[SYMBOL]: removeHiddenData ? null : matches,\n\t\t}));\n\n\t\tlastIndex = re.lastIndex;\n\n\t\tif (!isGlobal)\n\t\t{\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tif (!removeHiddenData)\n\t{\n\t\tObject.defineProperties(matches, {\n\t\t\tre: {\n\t\t\t\tvalue: re,\n\t\t\t\tenumerable: false,\n\t\t\t\tconfigurable: false,\n\t\t\t\twritable: false,\n\t\t\t},\n\n\t\t\tinput: {\n\t\t\t\tvalue: input,\n\t\t\t\tenumerable: false,\n\t\t\t\tconfigurable: false,\n\t\t\t\twritable: false,\n\t\t\t},\n\n\t\t\tlastIndex: {\n\t\t\t\tvalue: lastIndex,\n\t\t\t\tenumerable: false,\n\t\t\t\tconfigurable: false,\n\t\t\t\twritable: false,\n\t\t\t},\n\t\t});\n\t}\n\n\treturn matches;\n}\n\nexport { execall as execAll }\n\nexport default execall;\n\n"]}