{"version":3,"file":"index.js","sourceRoot":"","sources":["index.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Created by user on 2019/6/6.\n */\n\nimport urlParse from 'url-parse';\nimport SymbolInspect from 'symbol.inspect';\nimport { inspect } from 'util';\nimport { typePredicates } from 'ts-type-predicates';\nimport errcode from 'err-code';\nimport indentString from 'indent-string';\nimport cleanStack from 'clean-stack';\n\nexport type IURLLike = string | URL | IURLObjectLike;\nexport const SYM_URL = Symbol('url');\nexport const SYM_HIDDEN = Symbol('hidden');\n\nconst enum ENUM_FAKE\n{\n\tprotocol = 'fake+http:',\n\thostname = 'url-fake-hostname',\n}\n\nconst SymbolContext = findSymbolContext();\n\nexport class LazyURL extends URL implements URL\n{\n\t/**\n\t * @deprecated\n\t */\n\tprotected [SYM_URL]?: URL;\n\tprotected [SYM_HIDDEN]: Partial<URL>;\n\n\tstatic create(url: IURLLike | [IURLLike, IURLLike?], base?: IURLLike)\n\t{\n\t\treturn new this(url, base)\n\t}\n\n\tconstructor(url: IURLLike | [IURLLike, IURLLike?], base?: IURLLike)\n\t{\n\t\tlet u = _core(url, base)\n\n\t\tsuper(u.url.href);\n\n\t\t//this[SYM_URL] = _url;\n\t\tthis[SYM_HIDDEN] = u.hidden;\n\n\t\t//_numerable(this)\n\t}\n\n\t/*\n\t[SymbolInspect]()\n\t{\n\t\treturn `LazyURL {\n  href: '${this.href}',\n  href: '${this.toRealString()}',\n  origin: '${this.origin}',\n  protocol: '${this.protocol}',\n  username: '${this.username}',\n  password: '${this.password}',\n  host: '${this.host}',\n  hostname: '${this.hostname}',\n  port: '${this.port}',\n  pathname: '${this.pathname}',\n  search: '${this.search}',\n  searchParams: ${util.inspect(this.searchParams)},\n  hash: '${this.hash}'\n}`;\n\t}\n\t */\n\n\t/*\n\t[SymbolInspect]()\n\t{\n\t\treturn `LazyURL(${this.href})`;\n\t}\n\n\t */\n\n\tget paths(): string[]\n\t{\n\t\tif (SymbolContext != null && this[SymbolContext] && Array.isArray(this[SymbolContext].path))\n\t\t{\n\t\t\treturn this[SymbolContext].path.slice();\n\t\t}\n\n\t\treturn this.pathname\n\t\t\t.split('/')\n\t\t\t.filter(v => v !== '')\n\t}\n\n\tfakeExists()\n\t{\n\t\treturn this.fakeKeys().length\n\t}\n\n\tfakeKeys()\n\t{\n\t\treturn Object.keys(this[SYM_HIDDEN])\n\t}\n\n\tfakeEntries()\n\t{\n\t\treturn Object.entries(this[SYM_HIDDEN])\n\t}\n\n\t/**\n\t * get the real url (remove fake value)\n\t * throw error if not a valid url\n\t *\n\t * @returns {string}\n\t */\n\ttoRealString()\n\t{\n\t\tlet ks = this.fakeEntries();\n\n\t\tif (ks.length)\n\t\t{\n\t\t\tlet u = urlParse(this.href);\n\n\t\t\tks\n\t\t\t\t.forEach(([name, value]) =>\n\t\t\t\t{\n\t\t\t\t\tif (u[name] === value)\n\t\t\t\t\t{\n\t\t\t\t\t\tu.set(name as any, '');\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t;\n\n\t\t\tif (u.host === '')\n\t\t\t{\n\t\t\t\tif (u.username !== '' || u.password !== '' || u.port !== '' || u.protocol !== '')\n\t\t\t\t{\n\t\t\t\t\t//throw new TypeError(`Invalid URL ${u}`)\n\n\t\t\t\t\tthrow _wrapError(new TypeError(`Invalid URL`), u)\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet s = u.toString();\n\n\t\t\tif (u.protocol === '' && u.host === '')\n\t\t\t{\n\t\t\t\ts = s.replace(/^\\/\\//, '');\n\t\t\t}\n\n\t\t\treturn s\n\t\t}\n\n\t\treturn this.href;\n\t}\n\n\toverride toString()\n\t{\n\t\treturn this.href;\n\t}\n\n\t/*\n\ttoJSON()\n\t{\n\t\treturn this[SYM_URL].toJSON();\n\t}\n\t */\n\n\t/*\n\tget hash()\n\t{\n\t\treturn this[SYM_URL].hash\n\t}\n\n\tset hash(value)\n\t{\n\t\tthis[SYM_URL].hash = value\n\t}\n\n\tget host()\n\t{\n\t\treturn this[SYM_URL].host\n\t}\n\n\tset host(value)\n\t{\n\t\tdelete this[SYM_HIDDEN].hostname;\n\n\t\tthis[SYM_URL].host = value\n\t}\n\t */\n\n\toverride get hostname()\n\t{\n\t\treturn super.hostname\n\t}\n\n\toverride set hostname(value)\n\t{\n\t\tdelete this[SYM_HIDDEN].hostname;\n\n\t\tsuper.hostname = value\n\t}\n\n\t/*\n\tget href()\n\t{\n\t\treturn this[SYM_URL].href\n\t}\n\n\tset href(value)\n\t{\n\t\tthis[SYM_URL].href = value\n\t}\n\n\tget origin()\n\t{\n\t\treturn this[SYM_URL].origin\n\t}\n\n\tget password()\n\t{\n\t\treturn this[SYM_URL].password\n\t}\n\n\tset password(value)\n\t{\n\t\tthis[SYM_URL].password = value\n\t}\n\n\tget pathname()\n\t{\n\t\treturn this[SYM_URL].pathname\n\t}\n\n\tset pathname(value)\n\t{\n\t\tthis[SYM_URL].pathname = value\n\t}\n\n\t */\n\n\toverride get port(): string\n\t{\n\t\treturn super.port\n\t}\n\n\toverride set port(value: string | number)\n\t{\n\t\tif (typeof value === 'string' && value !== '')\n\t\t{\n\t\t\tlet old = value.toString().trim();\n\n\t\t\tvalue = parseInt(value)\n\n\t\t\tif (old !== value.toString())\n\t\t\t{\n\t\t\t\tthrow new TypeError(`Invalid port input: { '${old}' => ${value} }`)\n\t\t\t}\n\t\t}\n\n\t\tif (typeof value === 'number')\n\t\t{\n\t\t\tif (Number.isNaN(value) || !Number.isFinite(value) || value < 0 || value > 65535)\n\t\t\t{\n\t\t\t\tthrow new RangeError(`Invalid port range: ${value}`)\n\t\t\t}\n\n\t\t\tvalue = value.toString();\n\t\t}\n\n\t\tsuper.port = value ?? ''\n\t}\n\n\toverride get protocol()\n\t{\n\t\treturn super.protocol\n\t}\n\n\toverride set protocol(value)\n\t{\n\t\tdelete this[SYM_HIDDEN].protocol;\n\n\t\tsuper.protocol = value\n\t}\n\n\t/*\n\tget search()\n\t{\n\t\treturn this[SYM_URL].search\n\t}\n\n\tset search(value)\n\t{\n\t\tthis[SYM_URL].search = value\n\t}\n\n\tget searchParams()\n\t{\n\t\treturn this[SYM_URL].searchParams\n\t}\n\n\tget username()\n\t{\n\t\treturn this[SYM_URL].username\n\t}\n\n\tset username(value)\n\t{\n\t\tthis[SYM_URL].username = value\n\t}\n\n\t */\n\n\t/**\n\t * @alias protocol\n\t */\n\tget scheme()\n\t{\n\t\treturn this.protocol\n\t}\n\n\t/**\n\t * @alias protocol\n\t */\n\tset scheme(value: string)\n\t{\n\t\tthis.protocol = value;\n\t}\n\n\t/**\n\t * @alias hash\n\t */\n\tget fragment()\n\t{\n\t\treturn this.hash\n\t}\n\n\t/**\n\t * @alias hash\n\t */\n\tset fragment(value: string)\n\t{\n\t\tthis.hash = value;\n\t}\n\n\t/**\n\t * @alias search\n\t */\n\tget query()\n\t{\n\t\treturn this.search\n\t}\n\n\t/**\n\t * @alias search\n\t */\n\tset query(value: string)\n\t{\n\t\tthis.search = value;\n\t}\n\n\ttoObject(): IURLObject\n\t{\n\t\treturn LazyURL.toObject(this)\n\t}\n\n\t/**\n\t * clone into a object\n\t *\n\t * @returns {IURLObject}\n\t */\n\tstatic toObject(url: URL): IURLObject\n\t{\n\t\treturn LazyURL.keys().reduce((a, b) =>\n\t\t{\n\t\t\tif (b === 'searchParams')\n\t\t\t{\n\t\t\t\ta[b] = new URLSearchParams(url.searchParams.entries() as any as [string, string][])\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\ta[b] = url[b];\n\t\t\t}\n\n\t\t\treturn a\n\t\t}, {} as IURLObject)\n\t}\n\n\tkeys(): IUrlKeys[]\n\t{\n\t\treturn LazyURL.keys()\n\t}\n\n\tvalues()\n\t{\n\t\treturn LazyURL.values(this)\n\t}\n\n\tentries(): IEntries\n\t{\n\t\treturn LazyURL.entries(this)\n\t}\n\n\tstatic keys(): IUrlKeys[]\n\t{\n\t\treturn [\n\t\t\t'href',\n\t\t\t'protocol',\n\t\t\t'username',\n\t\t\t'password',\n\t\t\t'host',\n\t\t\t'hostname',\n\t\t\t'port',\n\t\t\t'pathname',\n\t\t\t'search',\n\t\t\t'searchParams',\n\t\t\t'hash',\n\t\t]\n\t}\n\n\tstatic values(url: URL)\n\t{\n\t\treturn LazyURL.keys().map(name => url[name])\n\t}\n\n\tstatic entries(url: URL): IEntries\n\t{\n\t\treturn LazyURL.keys().map(name => [name, url[name]]) as IEntries\n\t}\n\n\tcreateURLSearchParams(init?: string[][] | Record<string, string> | string | URLSearchParams | URL)\n\t{\n\t\tif (init instanceof URL)\n\t\t{\n\t\t\tinit = init.searchParams;\n\t\t}\n\n\t\treturn new URLSearchParams(init)\n\t}\n\n}\n\nexport type IEntries = ([\"hash\" | \"host\" | \"hostname\" | \"href\" | \"password\" | \"pathname\" | \"port\" | \"protocol\" | \"search\" | \"username\", string] | [\"searchParams\", URLSearchParams])[]\n\nexport type IEntriesRow<T extends IUrlKeys> = [T, URL[T]]\n\nfunction _numerable(lib)\n{\n\tlet ds = Object.getOwnPropertyDescriptors(lib);\n\n\t([\n\t\t'href',\n\t\t'protocol',\n\t\t'username',\n\t\t'password',\n\t\t'host',\n\t\t'hostname',\n\t\t'port',\n\t\t'pathname',\n\t\t'search',\n\t\t'searchParams',\n\t\t'hash',\n\t] as const)\n\t\t.forEach((name) =>\n\t\t{\n\t\t\tif (name in ds)\n\t\t\t{\n\t\t\t\tds[name].enumerable = true;\n\n\t\t\t\tObject.defineProperty(lib, name, ds[name])\n\t\t\t}\n\t\t})\n\t;\n}\n\nexport type IUrlKeys =\n\t| 'href'\n\t| 'username'\n\t| 'password'\n\t| 'host'\n\t| 'hostname'\n\t| 'port'\n\t| 'pathname'\n\t| 'search'\n\t| 'searchParams'\n\t| 'protocol'\n\t| 'hash'\n\t;\n\nexport function findSymbolContext(): symbol\n{\n\tlet u = _newURL(`https://localhost`);\n\n\tconst SymbolContext = Object.getOwnPropertySymbols(u)\n\t\t.filter(sym => u[sym].host == 'localhost')[0]\n\t;\n\n\treturn SymbolContext;\n}\n\nexport interface IURLObjectLike\n{\n\thref: string;\n}\n\nexport interface IURLObject\n{\n\thref: string;\n\tprotocol: string;\n\tusername: string;\n\tpassword: string;\n\thost: string;\n\thostname: string;\n\tport: string;\n\tpathname: string;\n\tsearch: string;\n\tsearchParams: URLSearchParams;\n\thash: string;\n}\n\n/**\n * @private\n */\nexport function _core(url: IURLLike | [IURLLike, IURLLike?], base?: IURLLike)\n{\n\tif (Array.isArray(url))\n\t{\n\t\tif (base == null)\n\t\t{\n\t\t\t[url, base] = url;\n\t\t}\n\t}\n\n\tif (url && url instanceof LazyURL)\n\t{\n\t\turl = url.toRealString();\n\t}\n\telse if (url && url instanceof URL)\n\t{\n\t\turl = url.href;\n\t}\n\telse if (url != null && typeof (url as IURLObjectLike).href === 'string')\n\t{\n\t\turl = (url as IURLObjectLike).href;\n\t}\n\telse if (typeof url !== 'string')\n\t{\n\t\tthrow _wrapError(new TypeError(`Argument '${url}' is not assignable to url like.`), url, base)\n\t}\n\n\tlet _url: URL;\n\tconst _hidden_: Partial<URL> = {};\n\n\tif (typeof base !== 'string' && base != null && typeof base.href === 'string')\n\t{\n\t\tbase = base.href;\n\t}\n\n\tif (base === '')\n\t{\n\t\tbase = void 0;\n\t}\n\n\ttry\n\t{\n\t\t_url = _newURL(url, base as string)\n\t}\n\tcatch (e: unknown)\n\t{\n\t\tlet ok: boolean;\n\n\t\ttypePredicates<IURLError>(e);\n\n\t\tif (e.code === 'ERR_INVALID_URL' || /Invalid URL/.test(e.message))\n\t\t{\n\t\t\tif (typeof base === 'string')\n\t\t\t{\n\t\t\t\tlet old = base;\n\t\t\t\tlet u = urlParse(base)/* as URL & {\n\t\t\t\t\t\tset(name: keyof URL, value: string): void\n\t\t\t\t\t}*/;\n\n\t\t\t\tif ((\n\t\t\t\t\tu.host === ''\n\t\t\t\t\t|| u.protocol === ''\n\t\t\t\t))\n\t\t\t\t{\n\t\t\t\t\tif (!old.includes('/') && [\n\t\t\t\t\t\tu.protocol + u.host,\n\t\t\t\t\t\tu.protocol + u.pathname,\n\t\t\t\t\t].includes(old.toLowerCase()))\n\t\t\t\t\t{\n\t\t\t\t\t\tu = urlParse('');\n\n\t\t\t\t\t\tu.set('host', old);\n\t\t\t\t\t\tu.set('protocol', ENUM_FAKE.protocol);\n\t\t\t\t\t\tu.set('pathname', '');\n\n\t\t\t\t\t\t_hidden_.protocol = ENUM_FAKE.protocol;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (u.host === '')\n\t\t\t\t\t{\n\t\t\t\t\t\tif (u.pathname != '' && !u.pathname.includes('/'))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tu.set('host', u.pathname);\n\t\t\t\t\t\t\tu.set('pathname', '');\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tu.set('host', ENUM_FAKE.hostname);\n\n\t\t\t\t\t\t\t_hidden_.hostname = u.hostname;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (u.protocol === '')\n\t\t\t\t\t{\n\t\t\t\t\t\tu.set('protocol', ENUM_FAKE.protocol);\n\t\t\t\t\t\t_hidden_.protocol = u.protocol;\n\t\t\t\t\t}\n\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tif (u.pathname !== '' && !u.pathname.startsWith('/'))\n\t\t\t\t\t{\n\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\tu.set('pathname', '/' + u.pathname);\n\t\t\t\t\t}\n\n\t\t\t\t\t_url = _newURL(url, u.toString());\n\n\t\t\t\t\tok = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if ((url == null || url === '') && base == null)\n\t\t\t{\n\n\t\t\t}\n\t\t\telse if (url != null && base == null)\n\t\t\t{\n\t\t\t\tbase = `${ENUM_FAKE.protocol}//${ENUM_FAKE.hostname}`;\n\n\t\t\t\t_url = _newURL(url, base);\n\n\t\t\t\t_hidden_.protocol = ENUM_FAKE.protocol;\n\t\t\t\t_hidden_.hostname = ENUM_FAKE.hostname;\n\n\t\t\t\tok = true;\n\t\t\t}\n\t\t}\n\n\t\tif (!ok)\n\t\t{\n\t\t\tthrow e\n\t\t}\n\t}\n\n\treturn {\n\t\turl: _url,\n\t\thidden: _hidden_,\n\t}\n}\n\nexport interface IURLErrorNode extends Error\n{\n\tcode: 'ERR_INVALID_URL' | string,\n\tinput: IURLLike,\n}\n\nexport interface IURLError extends IURLErrorNode\n{\n\tbaseURL: IURLLike,\n}\n\nfunction _wrapError<T extends Error>(e: T, input: IURLLike | [IURLLike, IURLLike?], baseURL?: IURLLike): T & IURLError\n{\n\ttypePredicates<IURLError>(e);\n\n\tlet message = e.message;\n\n\tif (message === 'Invalid URL' || e.code === 'ERR_INVALID_URL')\n\t{\n\t\tmessage = _messageWithErrors(e, [\n\t\t\te,\n\t\t\t{\n\t\t\t\tinput,\n\t\t\t\tbaseURL,\n\t\t\t},\n\t\t])\n\t}\n\n\tif (e.message !== message)\n\t{\n\t\te.message = message;\n\t}\n\n\tlet err = errcode(e, e.code ?? 'ERR_INVALID_URL', {\n\t\tinput,\n\t\tbaseURL,\n\t});\n\n\treturn err as any\n}\n\nfunction _newURL(input: string | URL, baseURL?: string | URL)\n{\n\ttry\n\t{\n\t\treturn new URL(input, baseURL)\n\t}\n\tcatch (e: unknown)\n\t{\n\t\tthrow _wrapError(e as IURLError, input, baseURL);\n\t}\n}\n\nfunction _messageWithErrors(e: Error, errors: any[])\n{\n\tlet sub_message = (errors as Error[])\n\t\t.map((error) =>\n\t\t{\n\t\t\tif (e === error)\n\t\t\t{\n\t\t\t\treturn String(error)\n\t\t\t}\n\t\t\telse if (typeof error?.stack === 'string')\n\t\t\t{\n\t\t\t\treturn cleanStack(error.stack)\n\t\t\t}\n\n\t\t\treturn inspect(error);\n\t\t})\n\t\t.join('\\n')\n\t;\n\treturn String(e.message) + '\\n' + indentString(sub_message, 4);\n}\n\nexport default LazyURL\n"]}