{"version":3,"file":"idea.js","sourceRoot":"","sources":["idea.ts"],"names":[],"mappings":";AAAA;;GAEG;;;;AAEH,8EAA0C;AAC1C,qEAAqC;AAGrC,SAAgB,KAAK,CAAC,IAAY;IAEjC,IAAI,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;IAEnB,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,MAAM,EACxC;QACC,IAAI,CAAE,MAAM,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,OAAO,CAAE,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QAE7D,aAAa;QACb,OAAO,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;QAExC,IAAI,OAAO,GAAG,IAAI,eAAU,CAAC;YAC5B,MAAM;YACN,IAAI;YACJ,GAAG;YACH,KAAK;YACL,OAAO,EAAE,OAAsB;SAC/B,CAAC,CAAC;QAEH,OAAO,OAAO,CAAA;KACd;AACF,CAAC;AArBD,sBAqBC;AAED,SAAgB,SAAS,CAAC,KAAsB;IAE/C,IAAI,OAAO,KAAK,KAAK,QAAQ,EAC7B;QACC,IAAI,CAAC,KAAK,IAAI,CAAC,KAAK,CAAC,MAAM,EAC3B;YACC,MAAM,IAAI,SAAS,CAAC,sBAAsB,KAAK,EAAE,CAAC,CAAA;SAClD;QAED,KAAK,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC;KACzB;IAED,OAAO,IAAA,wBAAI,EAAC,KAAK,CAAC;SAChB,KAAK,CAAC,mBAAE,CAAC;SACT,MAAM,CAAC,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE;QAErB,IAAI,OAAO,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;QAEjC,IAAI,OAAO,EACX;YACC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SAClB;QAED,OAAO,GAAG,CAAC;IACZ,CAAC,EAAE,EAAkB,CAAC,CACtB;AACF,CAAC;AA1BD,8BA0BC;AAED,SAAgB,SAAS,CAAC,MAAuC,EAAE,WAAqB;IAEvF,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,OAAO,EAAE,GAAG,MAAM,CAAC;IAEnD,IAAI,MAAM,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,EACjD;QACC,IAAI,CAAC,WAAW,EAChB;YACC,MAAM,IAAI,SAAS,CAAC,kCAAkC,MAAM,EAAE,CAAC,CAAA;SAC/D;KACD;IAED,OAAO,CAAC,MAAM,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC/E,CAAC;AAbD,8BAaC;AAED,kBAAe,SAAS,CAAA","sourcesContent":["/**\n * Created by user on 2019/6/10.\n */\n\nimport crlf, { LF } from 'crlf-normalize';\nimport LazyCookie from '../../index';\nimport toughCookie from 'tough-cookie';\n\nexport function parse(line: string)\n{\n\tline = line.trim();\n\n\tif (!line.startsWith('#') && line.length)\n\t{\n\t\tlet [ domain, path, key, value, expires ] = line.split('\\t');\n\n\t\t// @ts-ignore\n\t\texpires = new Date(Date.parse(expires));\n\n\t\tlet cookies = new LazyCookie({\n\t\t\tdomain,\n\t\t\tpath,\n\t\t\tkey,\n\t\t\tvalue,\n\t\t\texpires: expires as any as Date\n\t\t});\n\n\t\treturn cookies\n\t}\n}\n\nexport function parseFile(input: string | Buffer)\n{\n\tif (typeof input !== 'string')\n\t{\n\t\tif (!input || !input.length)\n\t\t{\n\t\t\tthrow new TypeError(`input is invalid : ${input}`)\n\t\t}\n\n\t\tinput = input.toString();\n\t}\n\n\treturn crlf(input)\n\t\t.split(LF)\n\t\t.reduce((arr, line) => {\n\n\t\t\tlet cookies = parse(line.trim());\n\n\t\t\tif (cookies)\n\t\t\t{\n\t\t\t\tarr.push(cookies);\n\t\t\t}\n\n\t\t\treturn arr;\n\t\t}, [] as LazyCookie[])\n\t;\n}\n\nexport function stringify(cookie: LazyCookie | toughCookie.Cookie, skipInvalid?: boolean)\n{\n\tlet { domain, path, key, value, expires } = cookie;\n\n\tif (domain == null || path == null || key == null)\n\t{\n\t\tif (!skipInvalid)\n\t\t{\n\t\t\tthrow new TypeError(`can't stringify, field is miss ${cookie}`)\n\t\t}\n\t}\n\n\treturn [domain, path, key, value, new Date(expires).toUTCString()].join('\\t');\n}\n\nexport default parseFile\n"]}