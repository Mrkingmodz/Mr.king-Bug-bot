{"version":3,"file":"index.js","sourceRoot":"","sources":["index.ts"],"names":[],"mappings":";;;;AAAA,qCAAqC;AACrC,6EAAwC;AAKxC,SAAgB,WAAW,CAAmB,WAAgC,EAAE,UAAkC,EAAE;;IAEnH,IAAI,EACH,WAAW,EAAE,YAAY,EACzB,wBAAwB,EACxB,GAAG,IAAI,EACP,GAAG,OAAO,CAAC;IAEZ,IAAI,EAAK,CAAC;IAEV,IAAI,YAAY,EAChB;QACC,EAAE,GAAG,YAAY,CAAC,WAAW,EAAE,IAAI,CAAC,CAAA;KACpC;SACI,IAAI,wBAAwB,KAAK,IAAI,IAAI,OAAO,WAAW,CAAC,KAAK,KAAK,UAAU,EACrF;QACC,aAAa;QACb,EAAE,GAAG,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,CAAA;KAC5B;SAED;QACC,EAAE,GAAG,IAAA,sBAAY,EAAC,WAAW,EAAE,IAAI,CAAM,CAAA;KACzC;IAED,IAAI,OAAO,IAAI,CAAC,SAAS,KAAK,QAAQ,EACtC;QACC,EAAE,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAA;KAC7B;SACI,IAAI,CAAC,MAAA,IAAI,CAAC,cAAc,mCAAI,IAAI,CAAC,KAAK,IAAI,EAC/C;QACC,EAAE,CAAC,SAAS,GAAG,CAAC,CAAA;KAChB;IAED,OAAO,EAAE,CAAA;AACV,CAAC;AAlCD,kCAkCC;AAED,kBAAe,WAAW,CAAA","sourcesContent":["/// <reference lib=\"es2018.regexp\" />\nimport _cloneRegexp from 'clone-regexp';\nimport { IRegExpWithClone, ICloneRegexpOptions, ICloneRegexp } from './lib/types';\n\nexport type { IRegExpWithClone, ICloneRegexpOptions, ICloneRegexp }\n\nexport function cloneRegexp<T extends RegExp>(inputRegExp: IRegExpWithClone<T>, options: ICloneRegexpOptions<T> = {}): T\n{\n\tlet {\n\t\tcloneRegexp: cloneRegexp2,\n\t\tdisableDetectRegexpClone,\n\t\t...opts\n\t} = options;\n\n\tlet re: T;\n\n\tif (cloneRegexp2)\n\t{\n\t\tre = cloneRegexp2(inputRegExp, opts)\n\t}\n\telse if (disableDetectRegexpClone !== true && typeof inputRegExp.clone === 'function')\n\t{\n\t\t// @ts-ignore\n\t\tre = inputRegExp.clone(opts)\n\t}\n\telse\n\t{\n\t\tre = _cloneRegexp(inputRegExp, opts) as T\n\t}\n\n\tif (typeof opts.lastIndex === 'number')\n\t{\n\t\tre.lastIndex = opts.lastIndex\n\t}\n\telse if ((opts.resetLastIndex ?? true) === true)\n\t{\n\t\tre.lastIndex = 0\n\t}\n\n\treturn re\n}\n\nexport default cloneRegexp\n"]}