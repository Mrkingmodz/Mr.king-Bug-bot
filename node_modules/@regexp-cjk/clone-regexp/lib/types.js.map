{"version":3,"file":"types.js","sourceRoot":"","sources":["types.ts"],"names":[],"mappings":"","sourcesContent":["import { Options } from 'clone-regexp';\nimport { IOptionsRewriteFlags } from '@regexp-cjk/rewrite-flags';\n\nexport interface ICloneRegexp<T extends RegExp = RegExp>\n{\n\t(inputRegExp: T | RegExp, options?: ICloneRegexpOptionsCore, ...argv): T\n}\n\nexport interface ICloneRegexpOptionsCore extends Options, IOptionsRewriteFlags\n{\n\n}\n\nexport interface ICloneRegexpOptionsCustom<T extends RegExp = RegExp>\n{\n\t/**\n\t * allow change cloneRegexp function\n\t */\n\tcloneRegexp?: ICloneRegexp<T>,\n\n\tdisableDetectRegexpClone?: boolean,\n\n\tresetLastIndex?: boolean,\n\n\tlastIndex?: number,\n}\n\nexport interface ICloneRegexpOptions<T extends RegExp = RegExp> extends ICloneRegexpOptionsCore, ICloneRegexpOptionsCustom<T>\n{\n\n}\n\nexport type IRegExpWithClone<T extends RegExp = RegExp> = T extends {\n\tclone?(...argv)\n} ? T : T & {\n\tclone?(options?: ICloneRegexpOptionsCore, ...argv): T\n}\n"]}