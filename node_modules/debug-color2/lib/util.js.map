{"version":3,"file":"util.js","sourceRoot":"","sources":["util.ts"],"names":[],"mappings":";AAAA;;GAEG;;;;AAEH,+DAAqC;AACrC,uCAAmC;AAKnC,SAAgB,YAAY,CAAC,GAAI;IAEhC,IAAI,OAAO,GAAG,KAAK,WAAW,IAAI,OAAO,EACzC;QACC,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC;KAClB;IAED,IAAI,UAAU,GAAG,GAAG,IAAI,IAAA,kBAAO,EAAC,GAAG,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;IAEvD,OAAO,UAAU,CAAC;AACnB,CAAC;AAVD,oCAUC;AAED,SAAgB,eAAe;IAE9B,OAAO,eAAK,CAAC,aAAa,CAAC,KAAK,CAAA;AACjC,CAAC;AAHD,0CAGC;AAED,SAAgB,sBAAsB,CAAsB,OAAW;IAEtE,OAAO,SAAS,cAAc,CAA6B,EAAyC;IACnG,aAAa;IACb,WAAc,OAAO;QAErB,OAAO,EAAE,CAAC,QAAQ,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAA;IACpC,CAAC,CAAA;AACF,CAAC;AARD,wDAQC;AAED,SAAgB,mBAAmB,CAAsB,OAAY;;IAEpE,OAAO,MAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,KAAK,mCAAI,eAAK,CAAA;AAC/B,CAAC;AAHD,kDAGC;AAED,SAAgB,mBAAmB,CAAsB,OAAW,EAAE,IAAY,EAAE,QAAQ,GAAG,KAAK;IAEnG,IAAI,CAAC,IAAI,IAAI,OAAO,IAAI,KAAK,QAAQ,IAAI,IAAI,IAAI,OAAO,EACxD;QACC,MAAM,SAAS,CAAC,qCAAqC,CAAC,CAAA;KACtD;IAED,IAAI,CAAC,QAAQ,IAAI,OAAO,QAAQ,KAAK,QAAQ,IAAI,QAAQ,IAAI,OAAO,EACpE;QACC,MAAM,SAAS,CAAC,yCAAyC,CAAC,CAAA;KAC1D;IAED,aAAa;IACb,IAAI,OAAO,OAAO,CAAC,IAAI,KAAK,UAAU,EACtC;QACC,MAAM,SAAS,CAAC,0CAA0C,CAAC,CAAA;KAC3D;IAED,OAAO,SAAS,aAAa,CAAC,GAAG,IAAI;QAEpC,aAAa;QACb,OAAO,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAA;IAC1C,CAAC,CAAA;AACF,CAAC;AAvBD,kDAuBC;AAED,SAAgB,gBAAgB,CAAC,MAAkC;IAElE,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,IAAI,MAAM,CAAC,OAAO,CAAC,CAAC;AAC7C,CAAC;AAHD,4CAGC;AAED,SAAgB,aAAa,CAAI,GAAiC,EAAE,KAAU;IAE7E,OAAO,GAAG,CAAC,QAAQ,CAAC,KAAY,CAAC,CAAA;AAClC,CAAC;AAHD,sCAGC;AAED,kBAAe,OAAkC,CAAC","sourcesContent":["/**\n * Created by user on 2018/6/29/029.\n */\n\nimport chalk, { Level } from 'chalk';\nimport { envBool } from 'env-bool';\nimport { Console2 } from './node';\nimport { IConsoleWithStream, IChalk } from './types';\nimport { ITSArrayListMaybeReadonly } from 'ts-type/lib/type/base';\n\nexport function isForceColor(env?): boolean | number | Level\n{\n\tif (typeof env === 'undefined' && process)\n\t{\n\t\tenv = process.env;\n\t}\n\n\tlet forceColor = env && envBool(env.FORCE_COLOR, true);\n\n\treturn forceColor;\n}\n\nexport function isSupportsColor()\n{\n\treturn chalk.supportsColor.level\n}\n\nexport function createFnChalkByConsole<CI extends Console2>(console: CI)\n{\n\treturn function chalkByConsole<R, C extends Console2 = CI>(cb: (chalk: C[\"chalk\"], _console: C) => R,\n\t\t// @ts-ignore\n\t\t_console: C = console): R\n\t{\n\t\treturn cb(_console.chalk, _console)\n\t}\n}\n\nexport function chalkByConsoleMaybe<CI extends Console2>(console?: CI): IChalk\n{\n\treturn console?.chalk ?? chalk\n}\n\nexport function createChalkStyleLog<CI extends Console2>(console: CI, name: string, failBack = 'log')\n{\n\tif (!name || typeof name !== 'string' || name in console)\n\t{\n\t\tthrow TypeError(`name is not allow in target console`)\n\t}\n\n\tif (!failBack || typeof failBack !== 'string' || failBack in console)\n\t{\n\t\tthrow TypeError(`failBack is not allow in target console`)\n\t}\n\n\t// @ts-ignore\n\tif (typeof console._log !== 'function')\n\t{\n\t\tthrow TypeError(`input console not a Console2 like object`)\n\t}\n\n\treturn function chalkStyleLog(...argv)\n\t{\n\t\t// @ts-ignore\n\t\treturn console._log(name, argv, failBack)\n\t}\n}\n\nexport function hasConsoleStream(target: IConsoleWithStream<object>)\n{\n\treturn !!(target._stdout && target._stderr);\n}\n\nexport function arrayIncludes<T>(arr: ITSArrayListMaybeReadonly<T>, value: any): value is T\n{\n\treturn arr.includes(value as any)\n}\n\nexport default exports as typeof import('./util');\n"]}