{"version":3,"file":"_log.js","sourceRoot":"","sources":["_log.ts"],"names":[],"mappings":";;;AACA,gCAAqC;AACrC,yCAAsC;AACtC,iDAA8C;AAE9C,SAAgB,IAAI,CAAiB,IAAY,EAAE,IAAW,EAAE,QAAQ,GAAG,KAAK;;IAE/E,IAAI,IAAA,2BAAY,EAAC,IAAI,CAAC,OAAO,CAAC,EAC9B;QACC,IAAI,IAAI,GAAG,CAAC,MAAA,IAAI,CAAC,QAAQ,mCAAI,mBAAQ,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC;QAExE,OAAO,IAAI,CAAC,iBAAW,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;KACjD;AACF,CAAC;AARD,oBAQC","sourcesContent":["import Console2 from '../node';\nimport { SYM_CONSOLE } from '../val';\nimport { _logArgv } from './_logArgv';\nimport { _get_enabled } from './_get_enabled';\n\nexport function _log(this: Console2, name: string, argv: any[], failBack = 'log')\n{\n\tif (_get_enabled(this.enabled))\n\t{\n\t\tlet data = (this._logArgv ?? _logArgv).call(this, argv, name, failBack);\n\n\t\treturn this[SYM_CONSOLE][data.name](...data.arr);\n\t}\n}\n"]}