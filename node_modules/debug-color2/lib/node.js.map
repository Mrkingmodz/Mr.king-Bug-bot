{"version":3,"file":"node.js","sourceRoot":"","sources":["node.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Created by user on 2018/7/2/002.\n */\n\n/// <reference types=\"node\" />\n\nimport chalk from 'chalk';\nimport { Console } from 'console';\nimport { DateTime } from 'luxon';\nimport { format as utilFormat, inherits as utilInherits } from 'util';\nimport isNodeJs from './chk';\nimport { methods_stdout, methods_stderr, methods } from './fill-property';\nimport { styleNames, styleNamesFn, IChalkOptions } from './styles';\nimport { defaultColors, SYM_CHALK, SYM_CONSOLE, SYM_DATA } from './val';\nimport { arrayIncludes, hasConsoleStream, isForceColor } from './util';\n\nimport { IChalk, IOptions, IStyles, IConsoleWithStream, InspectOptions, ILevel, IWriteStream } from './types';\nimport { ICrossConsole } from './types/CrossConsole';\nimport { bindBaseMethods, setBindThis } from './util/bindBaseMethods';\nimport { _logArgv, _logErrorArgv } from './console/_logArgv';\nimport { _time } from './console/_time';\nimport { _logFormat } from './console/_logFormat';\nimport { _labelFormat } from './console/_labelFormat';\nimport { _log } from './console/_log';\nimport { _get_enabled, _set_enabled } from './console/_get_enabled';\n\nexport * from './types';\n\nexport interface Console2 extends IConsoleWithStream<Console>, IStyles, ICrossConsole\n{\n\t(...argv): void\n\n\t[SYM_CONSOLE]: IConsoleWithStream<Console> | Console2;\n\t[SYM_CHALK]: IChalk;\n\n\t[SYM_DATA]: IOptions\n\n\t/**\n\t * A simple assertion test that verifies whether `value` is truthy.\n\t * If it is not, an `AssertionError` is thrown.\n\t * If provided, the error `message` is formatted using `util.format()` and used as the error message.\n\t */\n\tassert(value: any, message?: string, ...optionalParams: any[]): void;\n\t/**\n\t * When `stdout` is a TTY, calling `console.clear()` will attempt to clear the TTY.\n\t * When `stdout` is not a TTY, this method does nothing.\n\t */\n\tclear(): void;\n\t/**\n\t * Maintains an internal counter specific to `label` and outputs to `stdout` the number of times `console.count()` has been called with the given `label`.\n\t */\n\tcount(label?: string): void;\n\t/**\n\t * Resets the internal counter specific to `label`.\n\t */\n\tcountReset(label?: string): void;\n\t/**\n\t * The `console.debug()` function is an alias for {@link console.log()}.\n\t */\n\tdebug(message?: any, ...optionalParams: any[]): void;\n\t/**\n\t * Uses {@link util.inspect()} on `obj` and prints the resulting string to `stdout`.\n\t * This function bypasses any custom `inspect()` function defined on `obj`.\n\t */\n\tdir(obj: any, options?: InspectOptions): void;\n\t/**\n\t * This method calls {@link console.log()} passing it the arguments received. Please note that this method does not produce any XML formatting\n\t */\n\tdirxml(...data: any[]): void;\n\t/**\n\t * Prints to `stderr` with newline.\n\t */\n\terror(message?: any, ...optionalParams: any[]): void;\n\t/**\n\t * Increases indentation of subsequent lines by two spaces.\n\t * If one or more `label`s are provided, those are printed first without the additional indentation.\n\t */\n\tgroup(...label: any[]): void;\n\t/**\n\t * The `console.groupCollapsed()` function is an alias for {@link console.group()}.\n\t */\n\tgroupCollapsed(): void;\n\t/**\n\t * Decreases indentation of subsequent lines by two spaces.\n\t */\n\tgroupEnd(): void;\n\t/**\n\t * The {@link console.info()} function is an alias for {@link console.log()}.\n\t */\n\tinfo(message?: any, ...optionalParams: any[]): void;\n\t/**\n\t * Prints to `stdout` with newline.\n\t */\n\tlog(message?: any, ...optionalParams: any[]): void;\n\t/**\n\t * This method does not display anything unless used in the inspector.\n\t *  Prints to `stdout` the array `array` formatted as a table.\n\t */\n\ttable(tabularData: any, properties?: string[]): void;\n\t/**\n\t * Starts a timer that can be used to compute the duration of an operation. Timers are identified by a unique `label`.\n\t */\n\ttime(label?: string): void;\n\t/**\n\t * Stops a timer that was previously started by calling {@link console.time()} and prints the result to `stdout`.\n\t */\n\ttimeEnd(label?: string): void;\n\t/**\n\t * Prints to `stderr` the string 'Trace :', followed by the {@link util.format()} formatted message and stack trace to the current position in the code.\n\t */\n\ttrace(message?: any, ...optionalParams: any[]): void;\n\t/**\n\t * The {@link console.warn()} function is an alias for {@link console.error()}.\n\t */\n\twarn(message?: any, ...optionalParams: any[]): void;\n\n\t// --- Inspector mode only ---\n\t/**\n\t * This method does not display anything unless used in the inspector.\n\t *  Starts a JavaScript CPU profile with an optional label.\n\t */\n\tprofile(label?: string): void;\n\t/**\n\t * This method does not display anything unless used in the inspector.\n\t *  Stops the current JavaScript CPU profiling session if one has been started and prints the report to the Profiles panel of the inspector.\n\t */\n\tprofileEnd(): void;\n\t/**\n\t * This method does not display anything unless used in the inspector.\n\t *  Adds an event with the label `label` to the Timeline panel of the inspector.\n\t */\n\ttimeStamp(label?: string): void;\n}\n\nexport class Console2\n{\n\tconstructor(target: Console2 | IConsoleWithStream<Console> = console, options?: IOptions)\n\t{\n\t\tthis[SYM_CONSOLE] = target || console;\n\n\t\tif (options?.chalkOptions)\n\t\t{\n\t\t\tthis[SYM_CHALK] = chalk.constructor(options.chalkOptions);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis[SYM_CHALK] = chalk.constructor();\n\t\t}\n\n\t\t// @ts-ignore\n\t\tthis[SYM_DATA] = Object.create({\n\t\t\tcolors: Object.create(defaultColors),\n\t\t\t// @ts-ignore\n\t\t});\n\n\t\t// @ts-ignore\n\t\tthis[SYM_DATA].stream = null;\n\n\t\tif (this[SYM_CONSOLE] instanceof Console2)\n\t\t{\n\t\t\tlet target = (this[SYM_CONSOLE] as Console2).getStream();\n\n\t\t\tif (target)\n\t\t\t{\n\t\t\t\t// @ts-ignore\n\t\t\t\tthis[SYM_DATA].stream = hasConsoleStream(target);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// @ts-ignore\n\t\t\t\tthis[SYM_DATA].stream = false;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// @ts-ignore\n\t\t\tthis[SYM_DATA].stream = hasConsoleStream(this[SYM_CONSOLE]);\n\t\t}\n\n\t\tObject.assign(this[SYM_DATA], options || {});\n\n\t\tthis[SYM_DATA].chalkOptions = this[SYM_DATA].chalkOptions || {};\n\n\t\tif (this[SYM_DATA].chalkOptions.enabled)\n\t\t{\n\t\t\tthis[SYM_CHALK].enabled = true;\n\t\t}\n\t\telse if (this[SYM_CHALK].enabled && !isNodeJs())\n\t\t{\n\t\t\tthis[SYM_CHALK].enabled = false;\n\t\t}\n\t\telse if (!this[SYM_CHALK].enabled && isForceColor())\n\t\t{\n\t\t\tthis[SYM_CHALK].enabled = true;\n\t\t}\n\n\t\tif (this[SYM_DATA].inspectOptions?.depth < 0)\n\t\t{\n\t\t\tthis[SYM_DATA].inspectOptions.depth = null;\n\t\t}\n\n\t\tbindBaseMethods(this);\n\t}\n\n\tget _stdout()\n\t{\n\t\treturn this.getStream()._stdout\n\t}\n\n\tget _stderr()\n\t{\n\t\treturn this.getStream()._stderr\n\t}\n\n\tgetStream(): {\n\t\t_stdout: IWriteStream;\n\t\t_stderr: IWriteStream;\n\t}\n\t{\n\t\tif (this[SYM_DATA].stream)\n\t\t{\n\t\t\tlet _stdout: IWriteStream;\n\t\t\tlet _stderr: IWriteStream;\n\n\t\t\tif (this[SYM_CONSOLE] instanceof Console2)\n\t\t\t{\n\t\t\t\treturn (this[SYM_CONSOLE] as Console2).getStream()\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// @ts-ignore\n\t\t\t\t({ _stdout, _stderr } = this[SYM_CONSOLE]);\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\t_stdout,\n\t\t\t\t_stderr,\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tget chalk()\n\t{\n\t\treturn this[SYM_CHALK]\n\t}\n\n\tset chalk(value)\n\t{\n\t\tthis[SYM_CHALK] = value\n\t}\n\n\tget levelColor(): ILevel\n\t{\n\t\treturn this[SYM_CHALK].level\n\t}\n\n\tset levelColor(value)\n\t{\n\t\tthis[SYM_CHALK].level = value\n\t}\n\n\tget enabledColor()\n\t{\n\t\treturn this[SYM_CHALK].enabled\n\t}\n\n\tset enabledColor(value)\n\t{\n\t\tthis[SYM_CHALK].enabled = value ?? false\n\t}\n\n\tget chalkOptions(): IChalkOptions\n\t{\n\t\treturn this[SYM_DATA].chalkOptions\n\t}\n\n\tset chalkOptions(value)\n\t{\n\t\tthis[SYM_DATA].chalkOptions = value\n\t}\n\n\tget inspectOptions()\n\t{\n\t\treturn this[SYM_DATA].inspectOptions\n\t}\n\n\tset inspectOptions(value)\n\t{\n\t\tthis[SYM_DATA].inspectOptions = value\n\t}\n\n\tsetInspectOptions(value: InspectOptions)\n\t{\n\t\tthis[SYM_DATA].inspectOptions = Object.assign(this[SYM_DATA].inspectOptions || {}, value);\n\t}\n\n\tget enabled()\n\t{\n\t\treturn _get_enabled(this[SYM_DATA].enabled)\n\t}\n\n\tset enabled(value)\n\t{\n\t\tthis[SYM_DATA].enabled = _set_enabled(value ?? false)\n\t}\n\n\tsetOptions(options: IOptions)\n\t{\n\t\tObject.assign(this[SYM_DATA], options);\n\n\t\treturn this;\n\t}\n\n\twithOptions(options: IOptions)\n\t{\n\t\tlet o = this._clone();\n\n\t\to[SYM_CHALK] = this[SYM_CHALK];\n\n\t\to[SYM_DATA] = Object.assign({}, this[SYM_DATA], options);\n\n\t\treturn o;\n\t}\n\n\tprotected _clone(): this\n\t{\n\t\tconst self = this;\n\n\t\tlet o = function Console2Method(...argv)\n\t\t{\n\t\t\t// @ts-ignore\n\t\t\treturn o.log(...argv);\n\t\t};\n\n\t\t/**\n\t\t * allow hacking parent object\n\t\t */\n\t\t// @ts-ignore\n\t\t//o.__proto__ = this.__proto__.constructor.prototype;\n\t\to.__proto__ = this;\n\n\t\t//o = o.bind(o);\n\n\t\to[SYM_CONSOLE] = self[SYM_CONSOLE];\n\t\to[SYM_DATA] = self[SYM_DATA];\n\n\t\t// @ts-ignore\n\t\tbindBaseMethods(o);\n\n\t\t// @ts-ignore\n\t\treturn o;\n\t}\n\n\tprotected _chalkStyleProp(name)\n\t{\n\t\tlet o = this._clone();\n\t\to[SYM_CHALK] = this[SYM_CHALK][name];\n\t\treturn o;\n\t}\n\n\tprotected _logFormat(format, ...args)\n\t{\n\t\treturn _logFormat(format, ...args);\n\t}\n\n\tsuccess(...argv)\n\t{\n\t\treturn this._log('success', argv);\n\t}\n\n\tok(...argv)\n\t{\n\t\treturn this._log('ok', argv);\n\t}\n\n\tfail(...argv)\n\t{\n\t\treturn this._log('fail', argv, 'error');\n\t}\n\n\tprotected _labelFormat(data: Parameters<IOptions[\"labelFormatFn\"]>[0])\n\t{\n\t\treturn _labelFormat.call(this, data)\n\t}\n\n\tprotected _logErrorArgv(argv: any[], name: string = 'error', failBack = 'error')\n\t{\n\t\treturn _logErrorArgv.call(this, argv, name, failBack)\n\t}\n\n\tprotected _logArgv(argv: any[], name: string = 'log', failBack = 'log')\n\t{\n\t\treturn _logArgv.call(this, argv, name, failBack);\n\t}\n\n\tprotected _log(name: string, argv: any[], failBack = 'log')\n\t{\n\t\treturn _log.call(this, name, argv, failBack)\n\t}\n\n\tprotected _logError(name: string, argv, failBack = 'error')\n\t{\n\t\treturn this._log(name, argv, failBack)\n\t}\n\n\tprotected _chalkStyleMethod(name)\n\t{\n\t\treturn function chalkStyleMethod(this: Console2, ...argv)\n\t\t{\n\t\t\tlet o = this._clone();\n\n\t\t\to[SYM_CHALK] = this[SYM_CHALK][name](...argv);\n\n\t\t\treturn o;\n\t\t};\n\t}\n\n\tprotected _time(data?: Parameters<IOptions[\"labelFormatFn\"]>[0])\n\t{\n\t\treturn _time.call(this, data)\n\t}\n}\n\nutilInherits(Console2, Function);\n\n// @ts-ignore\nConsole2.prototype.Console = Console2\n\nstyleNames.forEach(function (name)\n{\n\tif (styleNamesFn.includes(name as any))\n\t{\n\t\tObject.defineProperty(Console2.prototype, name, {\n\t\t\tget()\n\t\t\t{\n\t\t\t\treturn this._chalkStyleMethod(name);\n\t\t\t},\n\t\t});\n\t}\n\telse\n\t{\n\t\tObject.defineProperty(Console2.prototype, name, {\n\t\t\tget()\n\t\t\t{\n\t\t\t\treturn this._chalkStyleProp(name);\n\t\t\t},\n\t\t});\n\t}\n});\n\nmethods.forEach(function (name)\n{\n\tif (name == 'dir')\n\t{\n\t\tConsole2.prototype[name] = function chalkStyleLogOthers(object, options)\n\t\t{\n\t\t\tif (!this.enabled)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet enabledColor = this.enabledColor;\n\n\t\t\tif (!options && this[SYM_DATA].inspectOptions)\n\t\t\t{\n\t\t\t\toptions = this[SYM_DATA].inspectOptions;\n\t\t\t}\n\n\t\t\tif (options)\n\t\t\t{\n\t\t\t\tif (enabledColor && options.colors == null)\n\t\t\t\t{\n\t\t\t\t\toptions = {\n\t\t\t\t\t\t...options,\n\t\t\t\t\t\tcolors: enabledColor\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\treturn this[SYM_CONSOLE][name](object, options);\n\t\t\t}\n\n\t\t\treturn this[SYM_CONSOLE][name](object, {\n\t\t\t\tcolors: enabledColor,\n\t\t\t});\n\t\t};\n\t}\n\telse if (name == 'assert')\n\t{\n\t\tConsole2.prototype[name] = function chalkStyleLogAssert(value, ...argv)\n\t\t{\n\t\t\tif (!this.enabled)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!value)\n\t\t\t{\n\t\t\t\tlet o;\n\t\t\t\tif (argv.length)\n\t\t\t\t{\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tlet s = this._logFormat(...argv);\n\n\t\t\t\t\to = this[SYM_CHALK](s);\n\t\t\t\t}\n\t\t\t\treturn this[SYM_CONSOLE][name](value, o);\n\t\t\t}\n\t\t};\n\t}\n\telse if (arrayIncludes(methods_stdout,name))\n\t{\n\t\tConsole2.prototype[name] = function chalkStyleLogStdout(...argv)\n\t\t{\n\t\t\t// @ts-ignore\n\t\t\treturn (this._log ?? Console2.prototype._log).call(this, name, argv)\n\t\t};\n\t}\n\telse if (arrayIncludes(methods_stderr,name))\n\t{\n\t\tConsole2.prototype[name] = function chalkStyleLogStderr(...argv)\n\t\t{\n\t\t\t// @ts-ignore\n\t\t\treturn (this._logError ?? Console2.prototype._logError).call(this,name, argv, 'error')\n\t\t};\n\t}\n\telse\n\t{\n\t\tConsole2.prototype[name] = function chalkStyleLogOthers(...argv)\n\t\t{\n\t\t\tif (!this.enabled)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\treturn this[SYM_CONSOLE][name as any](...argv);\n\t\t};\n\t}\n});\n\nexport default Console2\n"]}